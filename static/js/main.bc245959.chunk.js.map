{"version":3,"sources":["components/BottomMenu.module.css","App.module.css","utils/portsMapInfo.ts","hooks/useRepositories.ts","utils/cleanTimeSnapshot.ts","hooks/useTimeSnapshots.ts","utils/estimateCoordinatesAtTime.ts","utils/findIndexNearestTo.ts","models/TimeSnapshots.ts","utils/portIsTooClose.ts","components/CenterOnLocationChange.tsx","components/PatriMap.tsx","components/BottomMenu.tsx","App.tsx","models/TimeSnapshot.ts","reportWebVitals.ts","utils/mapFirebaseData.tsx","firebase/firebase.ts","config/firebase.ts","index.tsx","repositories/RepositoriesImpl.ts"],"names":["module","exports","portsMapInfo","id","country","city","position","lat","lng","RepositoriesContext","createContext","cleanTimeSnapshots","timeSnapshots","uniqueElementsBy","a","b","timestamp","sort","arr","fn","reduce","acc","v","some","x","push","useTimeSnapshots","localCache","localStorage","getItem","defaultValue","JSON","parse","useState","setTimeSnapshots","timeSnapshotsFromListener","setTimeSnapshotsFromListener","repositories","useContext","Error","useRepositories","useEffect","last","length","newer","filter","el","console","log","getLastTimeSnapshot","lastTimeSnapshot","getTimeSnapshots","cachedTimeSnapshots","subscribeToNewerLocations","Date","effect","setItem","stringify","estimateCoordinatesAtTime","p2","p1","angle","distanceLatitude","distanceLongitude","Math","atan2","calculateAngle","distanceTraveledEstimation","distance","sqrt","pow","timeTookDistance","calculateSpeed","calculateDuration","cos","sin","binarySearch","locations","middle","floor","lowerPart","slice","upperPart","findIndexNearestTo","element","indexOf","timeSnapshotsFindBoundingSnapshotsForTimestamp","self","date","index","findBoundingPointsForTimestamp","getTime","left","right","portIsTooClose","currentPosition","portPosition","CenterOnLocationChange","map","useMap","zoom","getZoom","setView","PatriIcon","L","icon","iconUrl","process","iconSize","iconAnchor","DestinationIcon","PatriMap","nextPortPosition","positions","MapContainer","center","TileLayer","attribution","url","Marker","Polyline","concat","MIN_TIME_RANGE","sleep","ms","Promise","r","setTimeout","BottomMenu","props","MAX_TIME_RANGE","now","isPlaying","setIsPlaying","className","styles","bottomMenu","menuContent","dates","toLocaleString","temperature","nextPort","type","min","max","value","onChange","e","parseInt","target","style","display","alignItems","gap","onClick","i","countDown","daysToPatri","patriDeparture","patriArrival","progress","overlay","PATRI_ARRIVAL_DATE","PATRI_DEPARTURE_DATE","DATS_TO_PATRI","differenceInDays","App","currentTimeSnapshot","setCurrentTimeSnapshot","polyLinePositions","s","timeSnapshotsGetPositions","find","port","arrivalPortId","bounds","snapshot","other","time","coords","timeSnapshotEstimateAtTime","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","mapFirebaseData2","data","Object","values","lon","arrivalPort","lastPos","windTemperature","firebase1","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","firebase","locationsCollection","db","firestore","this","collection","orderBy","limit","get","querySnapshot","docs","newerLocations","default","afterDate","callback","where","onSnapshot","ReactDOM","render","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.bc245959.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bottomMenu\":\"BottomMenu_bottomMenu__2KZEQ\",\"menuContent\":\"BottomMenu_menuContent__1dDXV\",\"dates\":\"BottomMenu_dates__3kBXF\",\"overlay\":\"BottomMenu_overlay__2ATTf\",\"countDown\":\"BottomMenu_countDown__LY052\",\"progress\":\"BottomMenu_progress__1iv3f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"App_map__3Febj\"};","import { LatLngLiteral } from \"leaflet\";\n\nexport type PortInfo = {\n  id: string;\n  position: LatLngLiteral;\n  country: string;\n  city: string;\n};\n\nexport const portsMapInfo: PortInfo[] = [\n  {\n    id: \"3302\",\n    country: \"España\",\n    city: \"Algeciras\",\n    position: {\n      lat: 36.17549129756906,\n      lng: -5.418971717099447,\n    },\n  },\n  {\n    id: \"21826\",\n    country: \"España\",\n    city: \"Algeciras\",\n    position: {\n      lat: 36.17549129756906,\n      lng: -5.418971717099447,\n    },\n  },\n  {\n    id: \"343\",\n    country: \"Suecia\",\n    city: \"Malmo\",\n    position: {\n      lat: 55.617983507540984,\n      lng: 13.001871231147542,\n    },\n  },\n  {\n    id: \"233\",\n    country: \"Polonia\",\n    city: \"Gdynia\",\n    position: {\n      lat: 54.54480274086806,\n      lng: 18.509637289041667,\n    },\n  },\n  {\n    id: \"22450\",\n    country: \"Polonia\",\n    city: \"Puerto de Gdynia\",\n    position: {\n      lat: 54.54480274086806,\n      lng: 18.509637289041667,\n    },\n  },\n  {\n    id: \"771\",\n    country: \"Lituania\",\n    city: \"Klaipėda\",\n    position: {\n      lat: 55.714,\n      lng: 21.11567,\n    },\n  },\n  {\n    id: \"251\",\n    country: \"Irlanda\",\n    city: \"Greenore\",\n    position: {\n      lat: 54.034677,\n      lng: -6.133334,\n    },\n  },\n  {\n    id: \"21652\",\n    country: \"Irlanda\",\n    city: \"Ringaskiddy\",\n    position: {\n      lat: 51.83541,\n      lng: -8.330348,\n    },\n  },\n  {\n    id: \"2036\",\n    country: \"Países Bajos\",\n    city: \"Róterdam\",\n    position: {\n      lat: 51.943305,\n      lng: 4.141812,\n    },\n  },\n];\n","import { createContext, useContext } from \"react\";\nimport { Repositories } from \"../repositories/Repositories\";\n\nexport const RepositoriesContext = createContext<Repositories | null>(null);\n\nexport function useRepositories() {\n  const repositories = useContext(RepositoriesContext);\n\n  if (!repositories) {\n    throw new Error(\"useRepositories must be used within RepositoriesContext\");\n  }\n\n  return { repositories };\n}\n","import { TimeSnapshots } from \"../models/TimeSnapshots\";\n\nexport function cleanTimeSnapshots(\n  timeSnapshots: TimeSnapshots\n): TimeSnapshots {\n  return [\n    ...uniqueElementsBy(timeSnapshots, (a, b) => a.timestamp === b.timestamp),\n  ].sort((a, b) => a.timestamp - b.timestamp);\n}\n\nconst uniqueElementsBy = <T>(arr: T[], fn: (a: T, b: T) => boolean) =>\n  arr.reduce((acc, v) => {\n    if (!acc.some((x) => fn(v, x))) acc.push(v);\n    return acc;\n  }, [] as T[]);\n","import { useEffect, useState } from \"react\";\nimport { useRepositories } from \"./useRepositories\";\nimport { TimeSnapshot } from \"../models/TimeSnapshot\";\nimport { TimeSnapshots } from \"../models/TimeSnapshots\";\nimport { cleanTimeSnapshots } from \"../utils/cleanTimeSnapshot\";\n\nexport function useTimeSnapshots(): {\n  timeSnapshots: TimeSnapshots;\n  lastTimeSnapshot: TimeSnapshot | null;\n} {\n  const localCache = localStorage.getItem(\"timeSnapshots\");\n  const defaultValue = localCache ? JSON.parse(localCache) : [];\n\n  const [timeSnapshots, setTimeSnapshots] = useState<TimeSnapshots>(\n    defaultValue\n  );\n  const [\n    timeSnapshotsFromListener,\n    setTimeSnapshotsFromListener,\n  ] = useState<TimeSnapshots>([]);\n  const { repositories } = useRepositories();\n\n  useEffect(() => {\n    const last = timeSnapshots[timeSnapshots.length - 1];\n    const newer = timeSnapshotsFromListener.filter(\n      (el) => el.timestamp > last.timestamp\n    );\n\n    console.log({ newer });\n\n    setTimeSnapshots([...timeSnapshots, ...newer]);\n  }, [timeSnapshotsFromListener]);\n\n  useEffect(() => {\n    async function effect() {\n      let timeSnapshots: TimeSnapshot[] = defaultValue;\n      console.log(\"asking getLastTimeSnapshot\");\n      const lastTimeSnapshot = await repositories.getLastTimeSnapshot();\n      timeSnapshots = cleanTimeSnapshots([...timeSnapshots, lastTimeSnapshot]);\n      setTimeSnapshots(timeSnapshots);\n\n      const cachedTimeSnapshots = await repositories.getTimeSnapshots();\n      timeSnapshots = cleanTimeSnapshots([\n        ...timeSnapshots,\n        ...cachedTimeSnapshots,\n      ]);\n      setTimeSnapshots(timeSnapshots);\n\n      console.log(\"asking subscribeToNewerLocations\");\n      repositories.subscribeToNewerLocations(\n        new Date(timeSnapshots[timeSnapshots.length - 1].timestamp),\n        setTimeSnapshotsFromListener\n      );\n    }\n\n    effect();\n  }, []);\n\n  localStorage.setItem(\"timeSnapshots\", JSON.stringify(timeSnapshots));\n\n  const lastTimeSnapshot = timeSnapshots[timeSnapshots.length - 1];\n\n  return { timeSnapshots, lastTimeSnapshot };\n}\n","export type PositionAtTime = {\n  lat: number;\n  lng: number;\n  timestamp: number;\n};\n\nexport function estimateCoordinatesAtTime(\n  p2: PositionAtTime,\n  p1: PositionAtTime,\n  timestamp: number\n): PositionAtTime {\n  const angle = calculateAngle(p1, p2);\n  const speed = calculateSpeed(p1, p2);\n\n  const duration = calculateDuration(timestamp, p1);\n\n  const distanceTraveledEstimation = speed * duration;\n\n  const lat = Math.cos(angle) * distanceTraveledEstimation + p1.lat;\n  const lng = Math.sin(angle) * distanceTraveledEstimation + p1.lng;\n\n  return { lat, lng, timestamp };\n}\n\nfunction calculateSpeed(p1: PositionAtTime, p2: PositionAtTime) {\n  const b = p2.lat - p1.lat;\n  const a = p2.lng - p1.lng;\n\n  const distance = Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2));\n  const timeTookDistance = p2.timestamp - p1.timestamp;\n\n  return distance / timeTookDistance;\n}\n\nfunction calculateAngle(p1: PositionAtTime, p2: PositionAtTime) {\n  const distanceLatitude = p2.lat - p1.lat;\n  const distanceLongitude = p2.lng - p1.lng;\n\n  return Math.atan2(distanceLongitude, distanceLatitude);\n}\n\nfunction calculateDuration(timestamp: number, p1: PositionAtTime) {\n  return timestamp - p1.timestamp;\n}\n","function binarySearch<T extends { timestamp: number }>(\n  locations: T[],\n  timestamp: number\n): T {\n  if (locations.length === 1) {\n    return locations[0];\n  }\n\n  const middle = Math.floor(locations.length / 2);\n\n  const lowerPart = locations.slice(0, middle);\n  const upperPart = locations.slice(middle, locations.length);\n\n  const pivot = lowerPart[lowerPart.length - 1];\n\n  if (timestamp > pivot.timestamp) {\n    return binarySearch(upperPart, timestamp);\n  } else {\n    return binarySearch(lowerPart, timestamp);\n  }\n}\n\nexport function findIndexNearestTo<T extends { timestamp: number }>(\n  locations: T[],\n  timestamp: number\n) {\n  const element = binarySearch(locations, timestamp);\n\n  return locations.indexOf(element) - 1;\n}\n\nexport function findBoundingPointsForTimestamp<T extends { timestamp: number }>(\n  locations: T[],\n  timestamp: number\n) {\n  const index = findIndexNearestTo(locations, timestamp);\n\n  const p1 = locations[index];\n  const p2 = locations[index + 1];\n\n  if (!p2) {\n    return {\n      p1,\n      p2: p1,\n    };\n  }\n\n  return { p1, p2 };\n}\n","import { TimeSnapshot } from \"./TimeSnapshot\";\nimport { Positions } from \"./Positions\";\nimport { findBoundingPointsForTimestamp } from \"../utils/findIndexNearestTo\";\n\nexport type TimeSnapshots = TimeSnapshot[];\n\nexport function timeSnapshotsBefore(\n  self: TimeSnapshots,\n  date: Date\n): TimeSnapshots {\n  return self.filter((e) => e.timestamp <= date.getTime());\n}\n\nexport function timeSnapshotsGetPositions(self: TimeSnapshots): Positions {\n  return self.map((s) => s.position);\n}\n\nexport function timeSnapshotsFindBoundingSnapshotsForTimestamp(\n  self: TimeSnapshots,\n  date: Date\n) {\n  const { p1, p2 } = findBoundingPointsForTimestamp(self, date.getTime());\n\n  return { left: p1, right: p2 };\n}\n","import { LatLngLiteral } from \"leaflet\";\n\nconst VERY_NEAR_EPSILON = 0.02;\n\nexport function portIsTooClose(\n  currentPosition: LatLngLiteral,\n  portPosition: LatLngLiteral\n) {\n  const a = currentPosition.lat - portPosition.lat;\n  const b = currentPosition.lng - portPosition.lng;\n\n  const distance = Math.sqrt(a * a + b * b);\n\n  return distance < VERY_NEAR_EPSILON;\n}\n","import { FC, useEffect } from \"react\";\nimport { useMap } from \"react-leaflet\";\n\nexport const CenterOnLocationChange: FC<{ lat: number; lng: number }> = ({\n  lat,\n  lng,\n}) => {\n  const map = useMap();\n\n  useEffect(() => {\n    const zoom = map.getZoom();\n    map.setView({ lat, lng }, zoom);\n  }, [lat, lng]);\n\n  return null;\n};\n","import React, { FC } from \"react\";\nimport L from \"leaflet\";\nimport { MapContainer, Marker, Polyline, TileLayer } from \"react-leaflet\";\nimport { Position } from \"../models/MyPosition\";\nimport { portIsTooClose } from \"../utils/portIsTooClose\";\nimport { CenterOnLocationChange } from \"./CenterOnLocationChange\";\nimport \"./PatriMap.module.css\";\n\nconst PatriIcon = L.icon({\n  iconUrl: process.env.PUBLIC_URL + \"/patri.png\",\n  iconSize: [40, 40],\n  iconAnchor: [20, 20],\n});\n\nconst DestinationIcon = L.icon({\n  iconUrl: process.env.PUBLIC_URL + \"/tracking.png\",\n  iconSize: [32, 32],\n  iconAnchor: [16, 16],\n});\n\ntype PatriMapProps = {\n  currentPosition: Position;\n  nextPortPosition?: Position;\n  positions: Position[];\n};\n\nexport const PatriMap: FC<PatriMapProps> = ({\n  currentPosition,\n  nextPortPosition,\n  positions,\n}) => (\n  <MapContainer center={currentPosition} zoom={8}>\n    <TileLayer\n      attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    />\n    <Marker position={currentPosition} icon={PatriIcon} />\n    {nextPortPosition && !portIsTooClose(currentPosition, nextPortPosition) ? (\n      <Marker position={nextPortPosition} icon={DestinationIcon} />\n    ) : null}\n    <CenterOnLocationChange\n      lat={currentPosition.lat}\n      lng={currentPosition.lng}\n    />\n    <Polyline positions={positions.concat(currentPosition)} />\n  </MapContainer>\n);\n","import { TimeSnapshot } from \"../models/TimeSnapshot\";\nimport { PortInfo } from \"../utils/portsMapInfo\";\nimport styles from \"./BottomMenu.module.css\";\nimport React, { useState } from \"react\";\n\nconst MIN_TIME_RANGE = 1608802672283;\nconst HOUR_IN_MILLIS = 1000 * 60 * 60;\n\nconst sleep = (ms: number) => new Promise((r) => setTimeout(r, ms));\n\nexport function BottomMenu(props: {\n  currentPosition: TimeSnapshot;\n  nextPort?: PortInfo;\n  onChange: (e: number) => void;\n  daysToPatri: number;\n  patriDeparture: Date;\n  patriArrival: Date;\n}) {\n  const MAX_TIME_RANGE = Date.now();\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  return (\n    <div className={styles.bottomMenu}>\n      <div className={styles.menuContent}>\n        <p className={styles.dates}>\n          {new Date(props.currentPosition.timestamp).toLocaleString()}\n          {props.currentPosition.temperature != null\n            ? ` | ${props.currentPosition.temperature}ºC`\n            : null}\n          {\" | \"}\n          {props.nextPort\n            ? `${props.nextPort.city} (${props.nextPort.country})`\n            : null}\n        </p>\n        <input\n          type=\"range\"\n          min={MIN_TIME_RANGE}\n          max={MAX_TIME_RANGE}\n          value={props.currentPosition.timestamp}\n          onChange={(e) => {\n            const timestamp = parseInt(e.target.value);\n            props.onChange(timestamp);\n          }}\n        />\n        <div\n          style={{ display: \"flex\", alignItems: \"center\", gap: 10 }}\n          onClick={async () => {\n            if (isPlaying) {\n              return;\n            }\n\n            setIsPlaying(true);\n\n            for (\n              let i = MIN_TIME_RANGE;\n              i < MAX_TIME_RANGE;\n              i += HOUR_IN_MILLIS\n            ) {\n              await sleep(100);\n              console.log(\"Is playing\", isPlaying);\n\n              props.onChange(i);\n            }\n\n            setIsPlaying(false);\n          }}\n        >\n          <button>Ver el viaje</button>\n          <p className={styles.countDown}>\n            Patri llega en {props.daysToPatri} días\n          </p>\n        </div>\n        <progress\n          value={new Date().getTime() - props.patriDeparture.getTime()}\n          max={props.patriArrival.getTime() - props.patriDeparture.getTime()}\n          className={styles.progress}\n        />\n      </div>\n      <div className={styles.overlay} />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport styles from \"./App.module.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport differenceInDays from \"date-fns/differenceInDays\";\nimport { portsMapInfo } from \"./utils/portsMapInfo\";\nimport { useTimeSnapshots } from \"./hooks/useTimeSnapshots\";\nimport { timeSnapshotEstimateAtTime } from \"./models/TimeSnapshot\";\nimport {\n  timeSnapshotsBefore,\n  timeSnapshotsFindBoundingSnapshotsForTimestamp,\n  timeSnapshotsGetPositions,\n} from \"./models/TimeSnapshots\";\nimport { PatriMap } from \"./components/PatriMap\";\nimport { BottomMenu } from \"./components/BottomMenu\";\n\nconst PATRI_ARRIVAL_DATE = new Date(2021, 3, 10);\nconst PATRI_DEPARTURE_DATE = new Date(2020, 11, 22, 22, 0, 0);\nconst DATS_TO_PATRI = differenceInDays(PATRI_ARRIVAL_DATE, new Date());\n\nfunction App() {\n  const { timeSnapshots, lastTimeSnapshot } = useTimeSnapshots();\n  const [currentTimeSnapshot, setCurrentTimeSnapshot] = useState(\n    lastTimeSnapshot\n  );\n\n  useEffect(() => {\n    setCurrentTimeSnapshot(lastTimeSnapshot);\n  }, [lastTimeSnapshot]);\n\n  if (!currentTimeSnapshot) {\n    return (\n      <div>\n        <p>Cargando...</p>\n      </div>\n    );\n  }\n\n  const filteredTimeSnapshots = timeSnapshotsBefore(\n    timeSnapshots,\n    new Date(currentTimeSnapshot.timestamp)\n  );\n  const polyLinePositions = timeSnapshotsGetPositions(filteredTimeSnapshots);\n\n  const nextPort = portsMapInfo.find(\n    (port) => port.id === currentTimeSnapshot.arrivalPortId\n  );\n\n  return (\n    <div className={styles.map}>\n      <PatriMap\n        currentPosition={currentTimeSnapshot.position}\n        nextPortPosition={nextPort?.position}\n        positions={polyLinePositions}\n      />\n      <BottomMenu\n        currentPosition={currentTimeSnapshot}\n        nextPort={nextPort}\n        onChange={(timestamp) => {\n          const bounds = timeSnapshotsFindBoundingSnapshotsForTimestamp(\n            timeSnapshots,\n            new Date(timestamp)\n          );\n\n          const snapshot = timeSnapshotEstimateAtTime(\n            bounds.left,\n            bounds.right,\n            new Date(timestamp)\n          );\n\n          setCurrentTimeSnapshot(snapshot);\n        }}\n        daysToPatri={DATS_TO_PATRI}\n        patriDeparture={PATRI_DEPARTURE_DATE}\n        patriArrival={PATRI_ARRIVAL_DATE}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { Position } from \"./MyPosition\";\nimport { estimateCoordinatesAtTime } from \"../utils/estimateCoordinatesAtTime\";\n\nexport type TimeSnapshot = {\n  timestamp: number;\n  temperature: number;\n  position: Position;\n  arrivalPortId?: string;\n};\n\nexport function timeSnapshotEstimateAtTime(\n  self: TimeSnapshot,\n  other: TimeSnapshot,\n  time: Date\n): TimeSnapshot {\n  const coords = estimateCoordinatesAtTime(\n    {\n      lat: self.position.lat,\n      lng: self.position.lng,\n      timestamp: self.timestamp,\n    },\n    {\n      lat: other.position.lat,\n      lng: other.position.lng,\n      timestamp: other.timestamp,\n    },\n    time.getTime()\n  );\n\n  return {\n    timestamp: time.getTime(),\n    position: {\n      lat: coords.lat,\n      lng: coords.lng,\n    },\n    temperature: self.temperature,\n    arrivalPortId: self.arrivalPortId,\n  };\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { VesselLocationNode } from \"../firebase/typings\";\nimport { TimeSnapshot } from \"../models/TimeSnapshot\";\n\nexport function mapFirebaseData(data: any) {\n  const rawFirebaseLocations = (Object.values(\n    data\n  ) as any) as VesselLocationNode[];\n\n  return rawFirebaseLocations\n    .map(({ data }) => ({\n      timestamp: data.lastPos * 1000,\n      lat: data.lat,\n      lng: data.lon,\n      temperature: data.windTemperature,\n      arrivalPort: data.arrivalPort,\n    }))\n    .slice(10, rawFirebaseLocations.length);\n}\n\nexport function mapFirebaseData2(data: any): TimeSnapshot[] {\n  const rawFirebaseLocations = (Object.values(\n    data\n  ) as any) as VesselLocationNode[];\n\n  return rawFirebaseLocations.map(({ data }) => ({\n    position: {\n      lat: data.lat,\n      lng: data.lon,\n    },\n    arrivalPortId: data.arrivalPort?.id,\n    timestamp: data.lastPos * 1000,\n    temperature: data.windTemperature || 0,\n  }));\n}\n","import firebase1 from \"firebase\";\nimport { firebaseConfig } from \"../config/firebase\";\n\nconsole.log(\"Inicializando\");\nfirebase1.initializeApp(firebaseConfig);\nfirebase1.analytics();\nconsole.log(\"Listo\");\n\nexport const firebase = firebase1;\nexport type FirebaseCollection = firebase1.firestore.CollectionReference<firebase1.firestore.DocumentData>;\n","export const firebaseConfig = {\n  apiKey: \"AIzaSyBThWjVqdQVhkOm-P4VwtOkK1XvoQBFjBs\",\n  authDomain: \"patri-chaser.firebaseapp.com\",\n  databaseURL:\n    \"https://patri-chaser-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"patri-chaser\",\n  storageBucket: \"patri-chaser.appspot.com\",\n  messagingSenderId: \"191999461469\",\n  appId: \"1:191999461469:web:d17e4c14ed1ea2f1e0a5b4\",\n  measurementId: \"G-YL17SVHMQY\",\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { RepositoriesContext } from \"./hooks/useRepositories\";\nimport { RepositoriesImpl } from \"./repositories/RepositoriesImpl\";\n\nconst repositories = new RepositoriesImpl();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RepositoriesContext.Provider value={repositories}>\n      <App />\n    </RepositoriesContext.Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { mapFirebaseData2 } from \"../utils/mapFirebaseData\";\nimport { Repositories } from \"./Repositories\";\nimport { firebase, FirebaseCollection } from \"../firebase/firebase\";\nimport { TimeSnapshot } from \"../models/TimeSnapshot\";\n\nexport class RepositoriesImpl implements Repositories {\n  private locationsCollection: FirebaseCollection;\n\n  constructor() {\n    const db = firebase.firestore();\n    this.locationsCollection = db.collection(\"locations\");\n  }\n\n  async getLastTimeSnapshot(): Promise<TimeSnapshot> {\n    const querySnapshot = await this.locationsCollection\n      .orderBy(\"timestamp\", \"desc\")\n      .limit(1)\n      .get();\n\n    const data = querySnapshot.docs.map((el) => el.data());\n\n    const newerLocations = mapFirebaseData2(data);\n\n    return newerLocations[0];\n  }\n\n  async getTimeSnapshots(): Promise<TimeSnapshot[]> {\n    const data = await import(\"./time-snapshot-cache.json\");\n\n    return mapFirebaseData2(data.default);\n  }\n\n  subscribeToNewerLocations(\n    afterDate: Date,\n    callback: (locations: TimeSnapshot[]) => void\n  ): void {\n    this.locationsCollection\n      .orderBy(\"timestamp\")\n      .where(\"timestamp\", \">\", afterDate.getTime())\n      .onSnapshot((snapshot) => {\n        const newerLocations = mapFirebaseData2(\n          snapshot.docs.map((el) => el.data())\n        );\n\n        callback(newerLocations);\n      });\n  }\n}\n"],"sourceRoot":""}
{"version":3,"sources":["App.module.css","components/CenterOnLocationChange.tsx","utils/mapFirebaseData.tsx","utils/portsMapInfo.ts","utils/portIsTooClose.ts","App.tsx","utils/findIndexNearestTo.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","CenterOnLocationChange","lat","lng","map","useMap","useEffect","zoom","getZoom","setView","mapFirebaseData","data","rawFirebaseLocations","Object","values","timestamp","lastPos","lon","temperature","windTemperature","arrivalPort","slice","length","portsMapInfo","id","country","city","position","portIsTooClose","currentPostion","portPosition","a","b","c","Math","sqrt","console","log","sleep","ms","Promise","r","setTimeout","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","PatriIcon","L","icon","iconUrl","process","iconSize","iconAnchor","DestinationIcon","cachedLocations","mock","App","useState","locations","setLocations","currentPosition","setCurrentPosition","Date","now","sliderValue","setSliderValue","database","ref","child","on","snapshot","val","lastLocation","errorObject","error","patriArrival","patriDeparture","daysToPatri","differenceInDays","foo","index","i","findIndexNearestTo2","p1","p2","x","y","hip","pow","timeTookDistance","angulo","atan","abs","PI","speed","middleDuration","hip2","cos","sin","somethingDude","polyLinePositions","filter","e","concat","nextPort","find","port","nextPortLocationPosition","className","styles","MapContainer","center","TileLayer","attribution","url","Marker","Polyline","positions","bottomMenu","menuContent","dates","toLocaleString","type","min","max","value","onChange","parseInt","target","countDown","style","display","onClick","end","getTime","progress","overlay","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa41fdbc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"App_map__3ouXs\",\"bottomMenu\":\"App_bottomMenu__3Zmk_\",\"menuContent\":\"App_menuContent__1Ry4M\",\"dates\":\"App_dates__1kEE3\",\"overlay\":\"App_overlay__kgk5q\",\"countDown\":\"App_countDown__2fcTs\",\"progress\":\"App_progress__3wqwq\"};","import { FC, useEffect } from \"react\";\nimport { useMap } from \"react-leaflet\";\n\nexport const CenterOnLocationChange: FC<{ lat: number; lng: number }> = ({\n  lat,\n  lng,\n}) => {\n  const map = useMap();\n\n  useEffect(() => {\n    const zoom = map.getZoom();\n    map.setView({ lat, lng }, zoom);\n  }, [lat, lng]);\n\n  return null;\n};\n","import { VesselLocationNode } from \"../firebase/typings\";\nimport { Location } from \"../models/Location\";\n\nexport function mapFirebaseData(data: any) {\n  const rawFirebaseLocations = (Object.values(\n    data\n  ) as any) as VesselLocationNode[];\n\n  return rawFirebaseLocations\n    .map(({ data, timestamp }) => {\n      const newLocal = {\n        timestamp: data.lastPos * 1000,\n        lat: data.lat,\n        lng: data.lon,\n        temperature: data.windTemperature,\n        arrivalPort: data.arrivalPort,\n      };\n      return newLocal;\n    })\n    .slice(10, rawFirebaseLocations.length);\n}\n","import { LatLngLiteral } from \"leaflet\";\n\nexport type PortInfo = {\n  id: string;\n  position: LatLngLiteral;\n  country: string;\n  city: string;\n};\n\nexport const portsMapInfo: PortInfo[] = [\n  {\n    id: \"3302\",\n    country: \"España\",\n    city: \"Algeciras\",\n    position: {\n      lat: 36.17549129756906,\n      lng: -5.418971717099447,\n    },\n  },\n  {\n    id: \"21826\",\n    country: \"España\",\n    city: \"Algeciras\",\n    position: {\n      lat: 36.17549129756906,\n      lng: -5.418971717099447,\n    },\n  },\n  {\n    id: \"343\",\n    country: \"Suecia\",\n    city: \"Malmo\",\n    position: {\n      lat: 55.617983507540984,\n      lng: 13.001871231147542,\n    },\n  },\n  {\n    id: \"233\",\n    country: \"Polonia\",\n    city: \"Gdynia\",\n    position: {\n      lat: 54.54480274086806,\n      lng: 18.509637289041667,\n    },\n  },\n  {\n    id: \"22450\",\n    country: \"Polonia\",\n    city: \"Puerto de Gdynia\",\n    position: {\n      lat: 54.54480274086806,\n      lng: 18.509637289041667,\n    },\n  },\n  {\n    id: \"771\",\n    country: \"Lituania\",\n    city: \"Klaipėda\",\n    position: {\n      lat: 55.6865,\n      lng: 21.132,\n    },\n  },\n];\n","import { LatLngLiteral } from \"leaflet\";\n\nexport function portIsTooClose(\n  currentPostion: LatLngLiteral,\n  portPosition: LatLngLiteral\n) {\n  const a = currentPostion.lat - portPosition.lat;\n  const b = currentPostion.lng - portPosition.lng;\n\n  const c = Math.sqrt(a * a + b * b);\n\n  console.log(c);\n\n  // 0.0878646\n  // 0.000027\n\n  return c < 0.02;\n\n  return false;\n}\n","import React, { useEffect, useState } from \"react\";\nimport L, { LatLngLiteral } from \"leaflet\";\nimport { MapContainer, TileLayer, Marker, Polyline } from \"react-leaflet\";\nimport styles from \"./App.module.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport mock from \"./mock.json\";\nimport differenceInDays from \"date-fns/differenceInDays\";\nimport { CenterOnLocationChange } from \"./components/CenterOnLocationChange\";\nimport { findIndexNearestTo2 } from \"./utils/findIndexNearestTo\";\nimport firebase from \"firebase\";\nimport { mapFirebaseData } from \"./utils/mapFirebaseData\";\nimport { Location } from \"./models/Location\";\nimport { portsMapInfo } from \"./utils/portsMapInfo\";\nimport { portIsTooClose } from \"./utils/portIsTooClose\";\n\nconst sleep = (ms: number) => new Promise((r) => setTimeout(r, ms));\n\nconst DISABLE_FIREBASE = false;\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBThWjVqdQVhkOm-P4VwtOkK1XvoQBFjBs\",\n  authDomain: \"patri-chaser.firebaseapp.com\",\n  databaseURL:\n    \"https://patri-chaser-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"patri-chaser\",\n  storageBucket: \"patri-chaser.appspot.com\",\n  messagingSenderId: \"191999461469\",\n  appId: \"1:191999461469:web:d17e4c14ed1ea2f1e0a5b4\",\n  measurementId: \"G-YL17SVHMQY\",\n};\n\nif (!DISABLE_FIREBASE) {\n  firebase.initializeApp(firebaseConfig);\n  firebase.analytics();\n}\n\nconst PatriIcon = L.icon({\n  iconUrl: process.env.PUBLIC_URL + \"/patri.png\",\n  iconSize: [40, 40],\n  iconAnchor: [20, 20],\n});\n\nconst DestinationIcon = L.icon({\n  iconUrl: process.env.PUBLIC_URL + \"/tracking.png\",\n  iconSize: [32, 32],\n  iconAnchor: [16, 16],\n});\n\nconst cachedLocations = mapFirebaseData(mock);\n\nfunction App() {\n  const [locations, setLocations] = useState(cachedLocations);\n  const [currentPosition, setCurrentPosition] = useState(\n    cachedLocations[cachedLocations.length - 1]\n  );\n  const [sliderValue, setSliderValue] = useState(Date.now());\n\n  useEffect(() => {\n    if (!DISABLE_FIREBASE) {\n      const db = firebase.database();\n      const ref = db.ref(\"vessels\");\n\n      const firebaseLocationsRef = ref.child(\"locations\");\n\n      firebaseLocationsRef.on(\n        \"value\",\n        (snapshot) => {\n          const data = snapshot.val();\n\n          console.log(data);\n          const locations = mapFirebaseData(data);\n          setLocations(locations);\n          const lastLocation = locations[locations.length - 1];\n          setCurrentPosition(lastLocation);\n        },\n        (errorObject: any) => {\n          console.error(errorObject);\n        }\n      );\n    }\n  }, []);\n\n  const patriArrival = new Date(2021, 3, 10);\n  const patriDeparture = new Date(2020, 11, 22, 22, 0, 0);\n\n  const daysToPatri = differenceInDays(patriArrival, new Date());\n\n  function foo(timestamp: number) {\n    setSliderValue(timestamp);\n    const index = findIndexNearestTo2(locations, timestamp);\n    const p1 = locations[index];\n    const p2 = locations[index + 1];\n\n    if (!p2) {\n      setCurrentPosition(p1);\n      return;\n    }\n\n    const { x, y } = somethingDude(p2, p1, timestamp);\n\n    setCurrentPosition({\n      ...p1,\n      lat: x,\n      lng: y,\n      temperature: ((p1.temperature || 0) + (p2.temperature || 0)) / 2,\n    });\n    setSliderValue(timestamp);\n  }\n\n  const filteredPolylinesLocations: LatLngLiteral[] = locations.filter(\n    (e) => e.timestamp <= sliderValue\n  );\n  const polyLinePositions = filteredPolylinesLocations.concat({\n    lat: currentPosition.lat,\n    lng: currentPosition.lng,\n  });\n\n  console.log(currentPosition);\n\n  const nextPort = portsMapInfo.find(\n    (port) => port.id === currentPosition.arrivalPort?.id\n  );\n  const nextPortLocationPosition = nextPort?.position;\n\n  return (\n    <div className={styles.map}>\n      <MapContainer center={currentPosition} zoom={8}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Marker position={currentPosition} icon={PatriIcon} />\n        {nextPortLocationPosition &&\n        !portIsTooClose(currentPosition, nextPortLocationPosition) ? (\n          <Marker position={nextPortLocationPosition} icon={DestinationIcon} />\n        ) : null}\n        <CenterOnLocationChange\n          lat={currentPosition.lat}\n          lng={currentPosition.lng}\n        />\n        <Polyline positions={polyLinePositions}></Polyline>\n      </MapContainer>\n      <div className={styles.bottomMenu}>\n        <div className={styles.menuContent}>\n          <p className={styles.dates}>\n            {new Date(sliderValue).toLocaleString()}\n            {currentPosition.temperature != null\n              ? ` | ${currentPosition.temperature}ºC`\n              : null}\n            {\" | \"}\n            {nextPort ? `${nextPort.city} (${nextPort.country})` : null}\n          </p>\n          <input\n            type=\"range\"\n            min={1608802672283}\n            max={Date.now()}\n            value={sliderValue}\n            onChange={(e) => {\n              const timestamp = parseInt(e.target.value);\n\n              foo(timestamp);\n            }}\n          />\n          <p className={styles.countDown}>Patri llega en {daysToPatri} días</p>\n          <button\n            style={{ display: \"none\" }}\n            onClick={async () => {\n              const start = 1610199959804;\n              const end = 1610306207605;\n\n              for (let timestamp = start; timestamp < end; timestamp += 50000) {\n                await sleep(100);\n\n                foo(timestamp);\n              }\n\n              console.log(\"done\");\n            }}\n          >\n            D\n          </button>\n          <progress\n            value={new Date().getTime() - patriDeparture.getTime()}\n            max={patriArrival.getTime() - patriDeparture.getTime()}\n            className={styles.progress}\n          ></progress>\n        </div>\n        <div className={styles.overlay}></div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\nfunction somethingDude(p2: Location, p1: Location, timestamp: number) {\n  const b = p2.lat - p1.lat;\n  const a = p2.lng - p1.lng;\n\n  if (a === 0 || b === 0) {\n    return {\n      x: p1.lat,\n      y: p1.lng,\n    };\n  }\n\n  const hip = Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2));\n  const timeTookDistance = p2.timestamp - p1.timestamp;\n\n  let angulo = Math.atan(Math.abs(a) / Math.abs(b));\n  console.log({ angulo: (angulo * 180) / Math.PI });\n\n  if (a > 0 && b > 0) {\n    console.log(\"zero\");\n  }\n\n  if (a < 0 && b > 0) {\n    angulo = -angulo;\n  }\n\n  if (a < 0 && b < 0) {\n    angulo += Math.PI / 2;\n    angulo += Math.PI / 2;\n  }\n\n  if (a > 0 && b < 0) {\n    angulo = -angulo + Math.PI;\n  }\n\n  const speed = hip / timeTookDistance;\n\n  const middleDuration = timestamp - p1.timestamp;\n\n  const hip2 = speed * middleDuration;\n\n  const x = Math.cos(angulo) * hip2 + p1.lat;\n  const y = Math.sin(angulo) * hip2 + p1.lng;\n\n  return { x, y };\n}\n\n/*\n\nconst db = firebase.database()\n      const ref = db.ref(\"vessels\")\n\n      const foo = ref.child(\"locations\")\n\n\n      foo.on(\"value\", function(snapshot) {\n        console.log(snapshot.val());\n      }, function (errorObject: any) {\n        console.log(\"The read failed: \" + errorObject.code);\n      });\n\n\n      \n\n\n*/\n","import { Location } from \"../models/Location\";\n\nexport function findIndexNearestTo2(locations: Location[], timestamp: number) {\n  let last = 0;\n\n  for (let i = 0; i < locations.length; i++) {\n    if (locations[i].timestamp > timestamp) {\n      return i - 1;\n    }\n  }\n\n  return locations.length - 1;\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
[{"E:\\Documentos\\Proyectos Personales\\Mios\\patri-chaser\\patripatri\\src\\index.tsx":"1","E:\\Documentos\\Proyectos Personales\\Mios\\patri-chaser\\patripatri\\src\\reportWebVitals.ts":"2","E:\\Documentos\\Proyectos Personales\\Mios\\patri-chaser\\patripatri\\src\\App.tsx":"3","E:\\Documentos\\Proyectos Personales\\Mios\\patri-chaser\\patripatri\\src\\components\\CenterOnLocationChange.tsx":"4"},{"size":501,"mtime":1610309586306,"results":"5","hashOfConfig":"6"},{"size":425,"mtime":1610306497669,"results":"7","hashOfConfig":"6"},{"size":3991,"mtime":1610315299198,"results":"8","hashOfConfig":"6"},{"size":328,"mtime":1610315047660,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wpzq2p",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"E:\\Documentos\\Proyectos Personales\\Mios\\patri-chaser\\patripatri\\src\\index.tsx",[],"E:\\Documentos\\Proyectos Personales\\Mios\\patri-chaser\\patripatri\\src\\reportWebVitals.ts",[],"E:\\Documentos\\Proyectos Personales\\Mios\\patri-chaser\\patripatri\\src\\App.tsx",["20","21","22","23"],"import React, { FC, useEffect, useState } from \"react\";\nimport L from \"leaflet\";\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from \"react-leaflet\";\nimport styles from \"./App.module.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport mock from \"./mock.json\";\nimport { CenterOnLocationChange } from \"./components/CenterOnLocationChange\";\nimport { VesselLocationNode } from \"./firebase/typings\";\n\nexport function findIndexNearestTo(timestamp: number) {\n  let last = 0;\n  let lastDistance = 900000000000000;\n\n  for (let i = 0; i < locations.length; i++) {\n    const currentLocation = locations[i];\n\n    const currentDist = Math.abs(currentLocation.timestamp - timestamp);\n\n    if (currentDist < lastDistance) {\n      last = i;\n      lastDistance = currentDist;\n    }\n  }\n\n  return last;\n}\n\n/*\nimport firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBThWjVqdQVhkOm-P4VwtOkK1XvoQBFjBs\",\n  authDomain: \"patri-chaser.firebaseapp.com\",\n  databaseURL: \"https://patri-chaser-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"patri-chaser\",\n  storageBucket: \"patri-chaser.appspot.com\",\n  messagingSenderId: \"191999461469\",\n  appId: \"1:191999461469:web:d17e4c14ed1ea2f1e0a5b4\",\n  measurementId: \"G-YL17SVHMQY\"\n};\n\n// Use your config values here.\nfirebase.initializeApp(firebaseConfig);\n*/\n\nconst PatriIcon = L.icon({\n  iconUrl: process.env.PUBLIC_URL + \"/patri.png\",\n  iconSize: [40, 40],\n  iconAnchor: [20, 20],\n});\n\nconst rawFirebaseLocations = (Object.values(\n  mock\n) as any) as VesselLocationNode[];\n\ntype Location = {\n  timestamp: number;\n  lat: number;\n  lng: number;\n};\n\nconst locations = rawFirebaseLocations\n  .map(({ data, timestamp }) => {\n    const newLocal: Location = {\n      timestamp,\n      lat: data.lat,\n      lng: data.lon,\n    };\n    return newLocal;\n  })\n  .slice(10, rawFirebaseLocations.length);\n\nconst first = locations[0];\nconst last = locations[locations.length - 1];\n\nfunction App() {\n  const [locationIndex, setLocationIndex] = useState(locations.length - 1);\n\n  const [sliderValue, setSliderValue] = useState(last.timestamp);\n\n  const realPosition = locations[locationIndex];\n\n  /* useEffect(() => {\n      const baz = Object.values(locations);\n      const foo = baz as any as MyNode[];\n\n      (async () => {\n        for (const data of baz) {\n          \n\n          setPosition({\n            lat: data.data.lat,\n            lng: data.data.lon\n          })\n          await sleep(10)\n        }\n      })();\n\n      console.log(foo[0].data.lat);\n  }, []) */\n\n  return (\n    <div className={styles.map}>\n      <MapContainer center={realPosition} zoom={8}>\n        <TileLayer\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Marker position={realPosition} icon={PatriIcon} />\n        <CenterOnLocationChange lat={realPosition.lat} lng={realPosition.lng} />\n      </MapContainer>\n      <div className={styles.bottomMenu}>\n        <div className={styles.menuContent}>\n          <p className={styles.dates}>\n            {new Date(sliderValue).toLocaleString()}\n          </p>\n          <input\n            type=\"range\"\n            min={first.timestamp}\n            max={last.timestamp}\n            value={sliderValue}\n            onChange={(e) => {\n              const timestamp = parseInt(e.target.value);\n\n              const index = findIndexNearestTo(timestamp);\n\n              setLocationIndex(index);\n              setSliderValue(timestamp);\n            }}\n          />\n        </div>\n        <div className={styles.overlay}></div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n/*\n\nconst db = firebase.database()\n      const ref = db.ref(\"vessels\")\n\n      const foo = ref.child(\"locations\")\n\n\n      foo.on(\"value\", function(snapshot) {\n        console.log(snapshot.val());\n      }, function (errorObject: any) {\n        console.log(\"The read failed: \" + errorObject.code);\n      });\n\n\n      \n\n\n*/\n","E:\\Documentos\\Proyectos Personales\\Mios\\patri-chaser\\patripatri\\src\\components\\CenterOnLocationChange.tsx",["24"],"import { FC, useEffect } from \"react\";\nimport { useMap } from \"react-leaflet\";\n\nexport const CenterOnLocationChange: FC<{ lat: number; lng: number }> = ({\n  lat,\n  lng,\n}) => {\n  const map = useMap();\n\n  useEffect(() => {\n    const zoom = map.getZoom();\n    map.setView({ lat, lng }, zoom);\n  }, [lat, lng]);\n\n  return null;\n};\n",{"ruleId":"25","severity":1,"message":"26","line":1,"column":17,"nodeType":"27","messageId":"28","endLine":1,"endColumn":19},{"ruleId":"25","severity":1,"message":"29","line":1,"column":21,"nodeType":"27","messageId":"28","endLine":1,"endColumn":30},{"ruleId":"25","severity":1,"message":"30","line":3,"column":43,"nodeType":"27","messageId":"28","endLine":3,"endColumn":48},{"ruleId":"25","severity":1,"message":"31","line":3,"column":50,"nodeType":"27","messageId":"28","endLine":3,"endColumn":56},{"ruleId":"32","severity":1,"message":"33","line":13,"column":6,"nodeType":"34","endLine":13,"endColumn":16,"suggestions":"35"},"@typescript-eslint/no-unused-vars","'FC' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Popup' is defined but never used.","'useMap' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'map'. Either include it or remove the dependency array.","ArrayExpression",["36"],{"desc":"37","fix":"38"},"Update the dependencies array to be: [lat, lng, map]",{"range":"39","text":"40"},[296,306],"[lat, lng, map]"]